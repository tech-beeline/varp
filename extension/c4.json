{
    "Capability": {
        "scope": "c4",
        "prefix": "Публикация technical capability продукта",
        "body":[
            "# Публикация technical capability продукта",
            "",
            "component \"${1:имя capability}\" {",
            "    description \"${2:описание capability}\"",
            "    properties {",
            "        \"type\"          \"capability\"",
            "        \"code\"          \"${3:код capability, например, 001}\"",
            "        \"parents\"       \"${4:код business capability}\"",
            "        \"version\"       \"${5:версия в формате XX.YY}\"",
            "        \"goal_from\"     \"${6:дата, когда возможность становится целевой YYYYQX (опционально)}\"",
            "        \"goal_to\"       \"${7:дата, когда возможность перестает быть целевой YYYYQX (опционально)}\"",
            "    }",
            "}"
        ]
    },

    "Kafka": {
        "scope": "c4",
        "prefix": "Topic Kafka в облаке",
        "body":[
           "# Topic Kafka в облаке",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта}\"",
           "        \"region\"                \"${4:имя региона}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"cluster_name\"          \"${7:имя kafka кластера}\"",
           "        \"num_partitions\"        \"${8:2}\"",
           "        \"replication_factor\"    \"${9:3}\"",
           "        \"log_retention_hours\"   \"${10:168}\"",
           "        \"log_retention_bytes\"   \"${11:3276800000}\"",
           "        \"type\"                  \"kafka\"",
           "    }",
           "}"
        ]
    },
    "Mongo": {
        "scope": "c4",
        "prefix": "СУБД MongoDB в облаке",
        "body":[
           "# СУБД MongoDB в облаке",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта}\"",
           "        \"region\"                \"${4:имя региона}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"backup_strategies\"     \"${7:backup-off}\"",
           "        \"type\"                  \"mongodb\"",
           "    }",
           "}"
        ]
    },

    "PostgreSQL": {
        "scope": "c4",
        "prefix": "СУБД PostgreSQL в облаке",
        "body":[
           "# СУБД PostgreSQL в облаке",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта}\"",
           "        \"region\"                \"${4:имя региона}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"version\"               \"14\"",
           "        \"backup_strategies\"     \"${7:backup-off}\"",
           "        \"type\"                  \"postgresql\"",
           "    }",
           "}"
        ]
    },
    "Redis": {
        "scope": "c4",
        "prefix": "СУБД Redis в облаке",
        "body":[
           "# СУБД Redis в облаке",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта}\"",
           "        \"region\"                \"${4:имя региона}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"type\"                  \"redis\"",
           "    }",
           "}"
        ]
    },
    "VM": {
        "scope": "c4",
        "prefix": "Виртуальная машина в облаке",
        "body":[
           "# Виртуальная машина в облаке",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта}\"",
           "        \"region\"                \"${4:имя региона}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"image\"                 \"${7:ubuntu-22-04}\"",
           "        \"type\"                  \"vm\"",
           "    }",
           "}"
        ]
    },
    "Integration": {
        "scope": "c4",
        "prefix": "Публикация интеграционных интерфейсов",
        "body":[
           "# Публикация интеграционных интерфейсов",
           "",
           "component \"${1:имя интерфейса}\" {",
           "    description \"${2:описание интерфейса}\"",
           "    properties {",
           "        \"type\"          \"api\"",
           "        \"external_name\" \"${3:имя переменной для экспорта}\"",
           "        \"api_url\"       \"${4:url к json файлу со спецификацией}\"",
           "        \"tc\"            \"${5:код technical capability}\"",
           "        \"version\"       \"${6:версия в формате XX.YY}\"",
           "        \"protocol\"      \"${7:rest/soap/grpc/graphql/db_link/kafka}\"",
           "    }",
           "}"
        ]
    },
    "Microservice": {
        "scope": "c4",
        "prefix": "",
        "body":[
           "workspace {",
           "    name \"${1:имя продукта}\"",
           "    description \"${2:описание продукта}\"",
           "",
           "    # включаем режим с иерархической системой идентификаторов",
           "    !identifiers hierarchical",
           "",
           "    model {",
           "        properties { ",
           "            structurizr.groupSeparator \"/\"",
           "            workspace_cmdb \"${3:cmdb_mnemonic}\"",
           "            architect \"${4:имя архитектора}\"",
           "        }",
           "",
           "        my_user    = person \"B2C пользователь\"",
           "        my_admin   = person \"Администратор системы\"",
           "        my_support = person \"Специалист ТП\"",
           "",
           "        my_system = softwareSystem \"system name\"{",
           "            topic1 = container \"Topic name\"{",
           "                technology \"Kafka\"",
           "                tags \"kafka\"",
           "            }",
           "",
           "            scheme1 = container \"Scheme name\"{",
           "                technology \"PostgreSQL 14\"",
           "                tags \"postgre\"",
           "            }",
           "",
           "            mongo1 = container \"Mongo server\"{",
           "                technology \"MongoDB\"",
           "                tags \"mongo\"",
           "            }",
           "",
           "            s3_storage = container \"S3 Storage\" {",
           "                technology \"ceph\"",
           "                tags \"s3\"",
           "            }",
           "",
           "            cache1 = container \"Cache server\" {",
           "                technology \"Redis\"",
           "                tags \"redis\"",
           "            }",
           "",
           "            srv1 = container \"Service 1\" {",
           "                technology \"Spring\"",
           "                tags \"java\"",
           "                -> topic1 \"Публикация событий\" \"KAFKA TCP:9092\"",
           "                -> scheme1 \"Запрос/изменение данных\" \"SQL TCP:5432\"",
           "            }",
           "",
           "            srv2 = container \"Service 2\" {",
           "                technology \"Golang\"",
           "                tags \"go\"",
           "                -> s3_storage \"Запрос/сохранение файлов\" \"S3 HTTPS:443\"",
           "                -> mongo1 \"Запрос/сохранение документов\"",
           "            }",
           "",
           "            gw = container \"API Gateway\" {",
           "                technology \"Spring Cloud Gateway\"",
           "                tags \"java\"",
           "                -> srv1 \"Описание запроса\" \"REST HTTPS:443\"",
           "                -> srv2 \"Описание запроса\" \"REST HTTPS:443\"",
           "                -> cache1 \"Запрс кеша сессий\" \"REST HTTPS:443\"",
           "            }",
           "",
           "            bff = container \"BFF Web\" {",
           "                technology \"Spring\"",
           "                tags \"java\"",
           "                -> gw \"Описание запроса\" \"REST HTTPS:443\"",
           "            }",
           "",
           "            fe = container \"Frontend\" {",
           "                technology \"React\"",
           "                tags \"js\"",
           "                -> bff \"Описание запроса\" \"REST HTTPS:443\"",
           "            }",
           "        }",
           "",
           "        deploymentEnvironment \"PROD\" {",
           "                # если необходима DMZ",
           "                deploymentNode \"Demilitarized Zone\" {",
           "                    deploymentNode \"kubernates.namespace.dmz\" {",
           "                        deploymentNode \"pod_name_1\" {",
           "                            containerInstance my_system.fe",
           "                            instances 2",
           "                        }",
           "                    }",
           "                }",
           "                deploymentNode \"Protected Zone\" {",
           "                    deploymentNode \"kubernates.namespace.protected\" {",
           "                        deploymentNode \"pod_name_2\" {",
           "                            containerInstance my_system.bff",
           "                            instances 2",
           "                        }",
           "                        deploymentNode \"pod_name_3\" {",
           "                            containerInstance my_system.gw",
           "                            instances 2",
           "                        }",
           "                        deploymentNode \"pod_name_4\" {",
           "                            containerInstance my_system.srv1",
           "                        }",
           "                        deploymentNode \"pod_name_5\" {",
           "                            containerInstance my_system.srv2",
           "                        }",
           "                        deploymentNode \"pod_name_6\" {",
           "                            containerInstance my_system.topic1",
           "                        }",
           "                        deploymentNode \"pod_name_7\" {",
           "                            containerInstance my_system.scheme1",
           "                        }",
           "                        deploymentNode \"pod_name_8\" {",
           "                            containerInstance my_system.mongo1",
           "                        }",
           "                        deploymentNode \"pod_name_9\" {",
           "                            containerInstance my_system.s3_storage",
           "                        }",
           "                        deploymentNode \"pod_name_10\" {",
           "                            containerInstance my_system.cache1",
           "                        }",
           "                       }",
           "                    }",
           "                }",
           "    }",
           "",
           "    views {",
           "        # Конфигурируем настройки отображения plant uml",
           "        properties {",
           "            plantuml.format     \"svg\"",
           "            kroki.format        \"svg\"",
           "            structurizr.sort created",
           "            structurizr.tooltips true",
           "        }",
           "",
           "        # Задаем стили для отображения",
           "        themes default",
           "",
           "",
           "        # Диаграмма контекста",
           "        systemContext my_system {",
           "            include *",
           "            autoLayout",
           "        }",
           "",
           "        container my_system {",
           "            include *",
           "            autoLayout ",          
           "        }",
           "",
           "        deployment * \"PROD\" {",
           "            include *",
           "            autoLayout ",                
           "        }",
           "",
           "    }",
           "}"
        ]
    }          
}