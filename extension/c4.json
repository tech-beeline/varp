{
    "Usergate": {
        "scope": "c4",
        "prefix": "Usergate в облаке DataFort",
        "body":[
           "# Usergate в облаке DataFort",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${3:имя проекта в vega}\"",
           "        \"region\"                   \"${4:Адрес DC DataFort}\"",
           "        \"size\"                     \"${5:VE100}\"",
           "        \"vmware resource pool\"     \"${6:DF-NET-NVA-FR-DC1}\"",
		   "        \"version\"                  \"${7:Код версии}\"",
		   "        \"deployment_configuration\" \"${8:active}\"",
           "        \"type\"                     \"Usergate\"",
           "    }",
           "}"
        ]
    },
    "Sterra": {
        "scope": "c4",
        "prefix": "Sterra в облаке DataFort",
        "body":[
           "# Sterra в облаке DataFort",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${3:имя проекта в vega}\"",
           "        \"region\"                   \"${4:Адрес DC DataFort}\"",
           "        \"size\"                     \"${5:Код VE}\"",
           "        \"vmware resource pool\"     \"${6:DF-NET-NVA-FR-DC1}\"",
		   "        \"version\"                  \"${7:Код версии}\"",
		   "        \"deployment_configuration\" \"${8:one node}\"",
           "        \"type\"                     \"S-terra\"",
           "    }",
           "}"
        ]
    },	
    "Sangfor NGAF": {
        "scope": "c4",
        "prefix": "Sangfor NGAF в облаке DataFort",
        "body":[
           "# Cloud NGFW Pro в облаке DataFort",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${3:имя проекта в vega}\"",
           "        \"region\"                   \"${4:Адрес DC DataFort}\"",
           "        \"size\"                     \"${5:Код vmAF}\"",
           "        \"vmware resource pool\"     \"${6:DF-NET-NVA-FR-DC1}\"",
		   "        \"version\"                  \"${7:Код версии}\"",
		   "        \"deployment_configuration\" \"${8:one node}\"",
           "        \"type\"                     \"Sangfor NGAF\"",
           "    }",
           "}"
        ]
    },
    "Cloud LAN network": {
        "scope": "c4",
        "prefix": "Cloud LAN network в облаке DataFort",
        "body":[
           "# Cloud LAN network в облаке DataFort",
           "",
           "deploymentNode \"LAN\" {",
           "    containerInstance ${1:имя контейнера}",
		   "    technology  \"NSX Overlay Network Segment\"",  
           "    properties {",
           "        \"vega_project\"             \"${2:имя проекта в vega}\"",
           "        \"region\"                   \"${3:Адрес DC DataFort}\"",
           "        \"vlan\"                     \"${4:12345}\"",
           "        \"gateway\"                  \"${5:10.10.0.1/24}\"",
		   "        \"speed\"                    \"${6:200M}\"",
		   "        \"name\"                     \"${7:FTLN-Inet-DC1-DC3}\"",
           "        \"description\"              \"${8:Заказ-XXXX}\"",
           "    }",
           "}"
        ]
    },
    "VDI Horizon": {
        "scope": "c4",
        "prefix": "VDI Horizon в облаке DataFort",
        "body":[
           "# VDI Horizon в облаке DataFort",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${3:имя проекта в vega}\"",
		   "        \"vcenter\"                  \"${4:Адрес DC DataFort}\"",
           "        \"datacenter\"               \"${5:Адрес DC DataFort}\"",
           "        \"pool_name\"                \"${6:Наименование пула внутри Horizon}\"",
		   "        \"cluster\"                  \"${7:host_or_cluster в Horizon}\"", 
           "        \"min_vm\"                   \"${8:Мин. количество виртуальных машин в пуле}\"",
		   "        \"max_vm\"                   \"${9:Макс. количество виртуальных машин в пуле}\"",
		   "        \"name\"                     \"${10:Наименование пула}\"",
		   "        \"pool_tags\"                \"${11:Тэги, для удобства}\"",
		   "        \"template\"                 \"${12:Шаблон}\"",
           "    }",
           "}"
        ]
    },	
    "Intracloud_Vlan": {
        "scope": "c4",
        "prefix": "Intracloud_Vlan в облаке DataFort",
        "body":[
           "# Cloud Interconnect услуга DataFort",
           "",
           "deploymentNode \"Intracloud_vlan\" {",
           "    containerInstance \"Intracloud_vlan\"",
           "    properties {",
           "        \"Name\"                     \"${1:Указываем имя portgroup,имя обычно состоит из номера vlan_название клиента}\"",
		   "        \"Network termination\"      \"${2:Куда подается напрямую в пул или на сетевое устройство}\"",
           "        \"Speed\"                    \"${3:Скорость канала}\"",
           "        \"Name Site А\"              \"${4:Указываем какой Site в точке А}\"",
		   "        \"Name Site B\"              \"${5:Указываем какой Site в точке Б}\"",
		   "        \"Tenant name A\"            \"${6:Указываем какой тенант в точке А}\"",
		   "        \"Tenant name B\"            \"${7:Указываем какой тенант в точке Б}\"",
           "        \"Network\"                  \"${8:Указываем использованную сеть}\"",
		   "        \"Ip address GW A\"          \"${9:ip адресс GW на точке А}\"",
		   "        \"Ip address GW B\"          \"${10:ip адресс GW на точке Б}\"",
		   "        \"Vlan\"                     \"${11:В зависимости от включения выделиятся либо ГИСС, либо ОТП}\"",
           "    }",
           "}"
        ]
    },
    "Kaspesky EPP Multitenant": {
        "scope": "c4",
        "prefix": "Cloud Endpoint Protection Platform (EPP) в облаке DataFort",
        "body":[
           "# Cloud EPP Multitenant DataFort",
           "",
           "epp = deploymentNode \"Kaspesky Endpoint Protection\" {",
           "    containerInstance ${1:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${2:Код проекта в Vega}\"",
		   "        \"region\"                   \"${3:Адрес DC DataFort}\"",
           "        \"tarif\"                    \"multitenant\"",
           "        \"lic_version\"              \"${4:Выбрать standart/extended/edr}\"",
		   "        \"agents_count\"             \"${5:количество endpoint-ов}\"",
		   "        \"ip_ksc\"                   \"${6:IP адрес сервера KSC}\"",
		   "        \"org_name\"                 \"${7:Имя организации(для создания теннанта в KSC)}\"",
           "        \"username\"                 \"${8:Логин клиентской УЗ( возможен вариант с генерацией)}\"",
		   "        \"service_type\"             \"${9:ms/ss - managed/self service в случае с MS создается RO учетка для клиента}\"",
           "    }",
           "}"
        ]
    },
    "Kaspesky EPP Dedicated": {
        "scope": "c4",
        "prefix": "Cloud Endpoint Protection Platform (EPP) в облаке DataFort",
        "body":[
           "# Cloud EPP Dedicated DataFort",
           "",
           "epp = deploymentNode \"Kaspesky Endpoint Protection\" {",
           "    containerInstance ${1:имя контейнера}",
           "    properties {",
           "        \"vega_project\"             \"${2:Код проекта в Vega}\"",
		   "        \"region\"                   \"${3:Адрес DC DataFort}\"",
           "        \"tarif\"                    \"dedicated\"",
		   "        \"network\"                  \"${4:порт-группа, назначенная на интерфейс}\"", 
		   "        \"ip\"                       \"${5:ip адрес/маска}\"",
           "        \"lic_version\"              \"${6:Выбрать standart/extended/edr}\"",
		   "        \"agents_count\"             \"${7:количество endpoint-ов}\"",
		   "        \"ip_ksc\"                   \"${8:IP адрес сервера KSC}\"",
		   "        \"org_name\"                 \"${9:Имя организации(для создания теннанта в KSC)}\"",
           "        \"username\"                 \"${10:Логин клиентской УЗ( возможен вариант с генерацией)}\"",
		   "        \"service_type\"             \"${11:ms/ss - managed/self service в случае с MS создается RO учетка для клиента}\"",
           "    }",
           "}"
        ]
    },
    "NSC T0": {
        "scope": "c4",
        "prefix": "NSX EDGE в облаке DataFort",
        "body":[
           "# NSX EDGE DataFort",
           "",
           "T0_01 = deploymentNode \"${1:T0 name}\" {",
           "    containerInstance ${2:имя контейнера}",
		   "    tags \"T_Router\"",
           "    properties {",
           "        \"vega_project\"                     \"${3:Код проекта в Vega}\"",
		   "        \"region\"                           \"${4:Адрес DC address, VDC, Cluster and etc locations}\"",
           "        \"Edge Cluster\"                     \"${5:NSX EDGE Cluster name}\"",
		   "        \"Edge Node 1 name\"                 \"${6:NSX edge node1 name}\"", 
		   "        \"Edge Node 2 name\"                 \"${7:NSX edge node2 name}\"",
           "        \"HA mode\"                          \"${8:Active Standby/Active Active}\"",
		   "        \"External and Service Interfaces\"  \"${9:External interface or segment name}\"",
		   "        \"Active T0 External ip\"            \"${10:T0 External Segment IP 1}\"",
		   "        \"Backup T0 External ip\"            \"${11:T0 External Segment IP 2}\"",
           "        \"HA External VIP\"                  \"${12:T0 External Segment VIP}\"",
		   "        \"T0-T1 Transit Subnets\"            \"${13:Transit Segment Subnet}\"",
           "    }",
           "}"
        ]
    },
    "NSC T1": {
        "scope": "c4",
        "prefix": "NSX EDGE  в облаке DataFort",
        "body":[
           "# Cloud EPP Dedicated DataFort",
           "",
           "T1_01 = deploymentNode \"${1:T1 name}\" {",
           "    containerInstance ${2:имя контейнера}",
		   "    tags \"T_Router\"",
           "    properties {",
           "        \"vega_project\"                     \"${3:Код проекта в Vega}\"",
		   "        \"region\"                           \"${4:Адрес DC address, VDC, Cluster and etc locations}\"",
           "        \"Tier-0\"                           \"${5:None/T0 name}\"",
		   "        \"HA mode\"                          \"${6:NSX edge node1 name}\"", 
		   "        \"DHCP Config\"                      \"${7:NSX edge node2 name}\"",
           "        \"Edge Cluster\"                     \"${8:Active Standby/Active Active}\"",
		   "        \"Service Interfaces\"               \"${9:External interface or segment name}\"",
           "    }",
           "}"
        ]
    },
    "Cloud Compute": {
        "scope": "c4",
        "prefix": "Cloud Compute pool в облаке DataFort",
        "body":[
           "# Cloud Compute pool в облаке DataFort",
           "",
           "pool = deploymentNode \"${1:Clients_Pool_DC1}\" {",
           "    containerInstance my_system.pool",
           "    properties {",
           "        \"vega_project\"             \"${2:имя проекта в vega}\"",
           "        \"region\"                   \"${3:Адрес DC DataFort}\"",
           "        \"datacenter\"               \"${4:Название vcenter}\"",
           "        \"cpu\"                      \"${5:DF-NET-NVA-FR-DC1}\"",
		   "        \"ram\"                      \"${6:кол-во аллоцированных RAM}\"",
		   "        \"storage polycy\"           \"${7:название политики_кол-во GB}\"",
           "        \"type\"                     \"${8:paug/allocated}\"",
		   "        \"description\"              \"${9:Заказ-ХХХХ}\"",
           "    }",
           "}"
        ]
    },
    "Capability": {
        "scope": "c4",
        "prefix": "Публикация technical capability продукта",
        "body":[
            "# Публикация technical capability продукта",
            "",
            "component \"${1:имя capability}\" {",
            "    description \"${2:описание capability}\"",
            "    properties {",
            "        \"type\"          \"capability\"",
            "        \"code\"          \"${3:код capability, например, 001}\"",
            "        \"parents\"       \"${4:код business capability}\"",
            "        \"version\"       \"${5:версия в формате XX.YY}\"",
            "        \"goal_from\"     \"${6:дата, когда возможность становится целевой YYYYQX (опционально)}\"",
            "        \"goal_to\"       \"${7:дата, когда возможность перестает быть целевой YYYYQX (опционально)}\"",
            "    }",
            "}"
        ]
    },

    "ActivePassive": {
      "scope": "c4",
      "prefix": "",
      "body":[
        "production = deploymentEnvironment \"Production\" {",
        "    active = deploymentGroup \"active\"",
        "    passive   = deploymentGroup \"passive\"",
        "",
        "    properties {",
        "            \"vega_project\" \"${1:имя проекта в vega}\"",
        "            \"region\" \"Ярославль M6 Openstack 3 Inside\"",
        "        }",
        "",
        "    deploymentNode \"Server 1\" {",
        "        api1 = containerInstance api active",
        "        properties {",
        "            \"flavor\"  \"cpu2ram2\"",
        "            \"image\"   \"docker-ubuntu-22-04\"",
        "            \"type\"    \"vm\"",
        "        }",
        "    }",
        "",
        "    deploymentNode \"Database Server\" {",
        "        containerInstance database active",
        "    }",
        "",
        "    deploymentNode \"Server 2\" {",
        "        api2 = containerInstance api passive",
        "        properties {",
        "            \"flavor\"  \"cpu2ram4\"",
        "            \"image\"   \"docker-ubuntu-22-04\"",
        "            \"type\"    \"vm\"",
        "        }",
        "    }",
        "",
        "    deploymentNode \"Database Server\" {",
        "            containerInstance database passive",
        "    }",
        "",
        "    deploymentNode \"Load Balancer\" {",
        "        balancer = infrastructureNode \"Load balancer\" \"nginx\" {",
        "            -> api1 \"HTTP:443\"",
        "            -> api2 \"HTTP:443\"",
        "        }",
        "    }",
        "}"
      ]
    },

    "Kafka": {
        "scope": "c4",
        "prefix": "Topic Kafka в облаке Vega",
        "body":[
           "# Topic Kafka в облаке Vega",
           "# Flavors https://vega.vimpelcom.ru/docs/guide/compute/compute-overview.html",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта в vega}\"",
           "        \"region\"                \"${4:Ярославль M6 Openstack 3 Inside}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"cluster_name\"          \"${7:имя kafka кластера}\"",
           "        \"num_partitions\"        \"${8:2}\"",
           "        \"replication_factor\"    \"${9:3}\"",
           "        \"log_retention_hours\"   \"${10:168}\"",
           "        \"log_retention_bytes\"   \"${11:3276800000}\"",
           "        \"type\"                  \"kafka\"",
           "    }",
           "}"
        ]
    },
    "Mongo": {
        "scope": "c4",
        "prefix": "СУБД MongoDB в облаке Vega",
        "body":[
           "# СУБД MongoDB в облаке Vega",
           "# Flavors https://vega.vimpelcom.ru/docs/guide/compute/compute-overview.html",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта в vega}\"",
           "        \"region\"                \"${4:Ярославль M6 Openstack 3 Inside}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"backup_strategies\"     \"${7:backup-off}\"",
           "        \"type\"                  \"mongodb\"",
           "    }",
           "}"
        ]
    },

    "PostgreSQL": {
        "scope": "c4",
        "prefix": "СУБД PostgreSQL в облаке Vega",
        "body":[
           "# СУБД PostgreSQL в облаке Vega",
           "# Flavors https://vega.vimpelcom.ru/docs/guide/compute/compute-overview.html",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта в vega}\"",
           "        \"region\"                \"${4:Ярославль M6 Openstack 3 Inside}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"version\"               \"14\"",
           "        \"backup_strategies\"     \"${7:backup-off}\"",
           "        \"type\"                  \"postgresql\"",
           "    }",
           "}"
        ]
    },
    "Redis": {
        "scope": "c4",
        "prefix": "СУБД Redis в облаке Vega",
        "body":[
           "# СУБД Redis в облаке Vega",
           "# Flavors https://vega.vimpelcom.ru/docs/guide/compute/compute-overview.html",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта в vega}\"",
           "        \"region\"                \"${4:Ярославль M6 Openstack 3 Inside}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"type\"                  \"redis\"",
           "    }",
           "}"
        ]
    },
    "VM": {
        "scope": "c4",
        "prefix": "Виртуальная машина в облаке Vega",
        "body":[
           "# Виртуальная машина в облаке Vega",
           "# Images  https://vega.vimpelcom.ru/docs/guide/compute/compute-instructions/compute-servers-create.html",
           "# Flavors https://vega.vimpelcom.ru/docs/guide/compute/compute-overview.html",
           "",
           "deploymentNode \"${1:имя узла}\" {",
           "    containerInstance ${2:имя контейнера}",
           "    properties {",
           "        \"vega_project\"          \"${3:имя проекта в vega}\"",
           "        \"region\"                \"${4:Ярославль M6 Openstack 3 Inside}\"",
           "        \"flavor\"                \"${5:cpu2ram2}\"",
           "        \"volume_size\"           \"${6:50}\"",
           "        \"image\"                 \"${7:ubuntu-22-04}\"",
           "        \"type\"                  \"vm\"",
           "    }",
           "}"
        ]
    },
    "Integration": {
        "scope": "c4",
        "prefix": "Публикация интеграционных интерфейсов",
        "body":[
           "# Публикация интеграционных интерфейсов",
           "",
           "component \"${1:имя интерфейса}\" {",
           "    description \"${2:описание интерфейса}\"",
           "    properties {",
           "        \"type\"          \"api\"",
           "        \"external_name\" \"${3:имя переменной для экспорта}\"",
           "        \"api_url\"       \"${4:url к json файлу со спецификацией}\"",
           "        \"tc\"            \"${5:код technical capability}\"",
           "        \"version\"       \"${6:версия в формате XX.YY}\"",
           "        \"protocol\"      \"${7:rest/soap/grpc/graphql/db_link/kafka}\"",
           "    }",
           "}"
        ]
    },
    "Default": {
        "scope": "c4",
        "prefix": "",
        "body":[
           "# при создании workspace наследуемся от описания ландшафта",
           "workspace extends landscape/workspace.dsl {",
           "    name \"${1:имя продукта}\"",
           "    description \"${2:описание продукта}\"",
           "",
           "    # включаем режим с иерархической системой идентификаторов",
           "    !identifiers hierarchical",
           "",
           "    # Модель архитектуры",
           "    model {",
           "        properties { ",
           "            structurizr.groupSeparator \"/\"",
           "            workspace_cmdb \"${3:cmdb_mnemonic}\"",
           "            architect \"${4:имя архитектора}\"",
           "        }",
           "        !ref !${3:cmdb_mnemonic} {",
           "        }",
           "    }",
           "    # Диаграммы",
           "    views {",
           "        properties { ",
           "            plantuml.url \"https://structurizr.vimpelcom.ru/plantuml\"",
           "            plantuml.format \"svg\"",
           "            kroki.url \"https://kroki.vimpelcom.ru\"",
           "            kroki.format \"svg\"",
           "            structurizr.tooltips true",
           "        }",
           "",
           "        themes https://structurizr.vimpelcom.ru/themes/beeline.json",
           "",
           "        systemContext ${3:cmdb_mnemonic} \"context\" {",
           "            include *",
           "            autoLayout ",
           "        }",
           "    }",
           "}"
        ]
    },
    "Microservice": {
        "scope": "c4",
        "prefix": "",
        "body":[
           "workspace {",
           "    name \"${1:имя продукта}\"",
           "    description \"${2:описание продукта}\"",
           "",
           "    # включаем режим с иерархической системой идентификаторов",
           "    !identifiers hierarchical",
           "",
           "    model {",
           "        properties { ",
           "            structurizr.groupSeparator \"/\"",
           "            workspace_cmdb \"${3:cmdb_mnemonic}\"",
           "            architect \"${4:имя архитектора}\"",
           "        }",
           "",
           "        my_user    = person \"B2C пользователь\"",
           "        my_admin   = person \"Администратор системы\"",
           "        my_support = person \"Специалист ТП\"",
           "",
           "        my_system = softwareSystem \"system name\"{",
           "            topic1 = container \"Topic name\"{",
           "                technology \"Kafka\"",
           "                tags \"kafka\"",
           "            }",
           "",
           "            scheme1 = container \"Scheme name\"{",
           "                technology \"PostgreSQL 14\"",
           "                tags \"postgre\"",
           "            }",
           "",
           "            mongo1 = container \"Mongo server\"{",
           "                technology \"MongoDB\"",
           "                tags \"mongo\"",
           "            }",
           "",
           "            s3_storage = container \"S3 Storage\" {",
           "                technology \"ceph\"",
           "                tags \"s3\"",
           "            }",
           "",
           "            cache1 = container \"Cache server\" {",
           "                technology \"Redis\"",
           "                tags \"redis\"",
           "            }",
           "",
           "            srv1 = container \"Service 1\" {",
           "                technology \"Spring\"",
           "                tags \"java\"",
           "                -> topic1 \"Публикация событий\" \"KAFKA TCP:9092\"",
           "                -> scheme1 \"Запрос/изменение данных\" \"SQL TCP:5432\"",
           "            }",
           "",
           "            srv2 = container \"Service 2\" {",
           "                technology \"Golang\"",
           "                tags \"go\"",
           "                -> s3_storage \"Запрос/сохранение файлов\" \"S3 HTTPS:443\"",
           "                -> mongo1 \"Запрос/сохранение документов\"",
           "            }",
           "",
           "            gw = container \"API Gateway\" {",
           "                technology \"Spring Cloud Gateway\"",
           "                tags \"java\"",
           "                -> srv1 \"Описание запроса\" \"REST HTTPS:443\"",
           "                -> srv2 \"Описание запроса\" \"REST HTTPS:443\"",
           "                -> cache1 \"Запрс кеша сессий\" \"REST HTTPS:443\"",
           "            }",
           "",
           "            bff = container \"BFF Web\" {",
           "                technology \"Spring\"",
           "                tags \"java\"",
           "                -> gw \"Описание запроса\" \"REST HTTPS:443\"",
           "            }",
           "",
           "            fe = container \"Frontend\" {",
           "                technology \"React\"",
           "                tags \"js\"",
           "                -> bff \"Описание запроса\" \"REST HTTPS:443\"",
           "            }",
           "        }",
           "",
           "        deploymentEnvironment \"PROD\" {",
           "                deploymentNode \"DMZ STD OPS\" {",
           "                    deploymentNode \"kubernates.namespace.dmz\" {",
           "                        deploymentNode \"pod_name_1\" {",
           "                            containerInstance my_system.fe",
           "                            instances 2",
           "                        }",
           "                    }",
           "                }",
           "                deploymentNode \"PROTECTED STD OPS\" {",
           "                    deploymentNode \"kubernates.namespace.protected\" {",
           "                        deploymentNode \"pod_name_2\" {",
           "                            containerInstance my_system.bff",
           "                            instances 2",
           "                        }",
           "                        deploymentNode \"pod_name_3\" {",
           "                            containerInstance my_system.gw",
           "                            instances 2",
           "                        }",
           "                        deploymentNode \"pod_name_4\" {",
           "                            containerInstance my_system.srv1",
           "                        }",
           "                        deploymentNode \"pod_name_5\" {",
           "                            containerInstance my_system.srv2",
           "                        }",
           "                        deploymentNode \"pod_name_6\" {",
           "                            containerInstance my_system.topic1",
           "                        }",
           "                        deploymentNode \"pod_name_7\" {",
           "                            containerInstance my_system.scheme1",
           "                        }",
           "                        deploymentNode \"pod_name_8\" {",
           "                            containerInstance my_system.mongo1",
           "                        }",
           "                        deploymentNode \"pod_name_9\" {",
           "                            containerInstance my_system.s3_storage",
           "                        }",
           "                        deploymentNode \"pod_name_10\" {",
           "                            containerInstance my_system.cache1",
           "                        }",
           "                       }",
           "                    }",
           "                }",
           "    }",
           "",
           "    views {",
           "        # Конфигурируем настройки отображения plant uml",
           "        properties {",
           "            plantuml.url        \"https://structurizr.vimpelcom.ru/plantuml\"",
           "            kroki.url           \"https://kroki.vimpelcom.ru\"",
           "            plantuml.format     \"svg\"",
           "            kroki.format        \"svg\"",
           "            structurizr.sort created",
           "            structurizr.tooltips true",
           "        }",
           "",
           "        # Задаем стили для отображения",
           "        themes https://structurizr.vimpelcom.ru/themes/beeline.json",
           "",
           "",
           "        # Диаграмма контекста",
           "        systemContext my_system {",
           "            include *",
           "            autoLayout",
           "        }",
           "",
           "        container my_system {",
           "            include *",
           "            autoLayout ",          
           "        }",
           "",
           "        deployment * \"PROD\" {",
           "            include *",
           "            autoLayout ",                
           "        }",
           "",
           "    }",
           "}"
        ]
    },
    "Roles": {
        "scope": "c4",
        "prefix": "",
        "body":[
           "# Типовые роли системы", 
           "user        = person \"Внутренний пользователь\" \"Базовая роль пользователя обладающая доступом к основному функционалу системы\"",
           "client      = person \"Клиент\" \"Базовая роль для внешнего пользователя системы\"",
           "power_user  = person \"Привелигированный пользователь\" \"Пользователь с повышенными полномочиями\"",
           "local_admin = person \"Администратор\" \"Администратор рабочей станции/devops специалист\"",
           "db_admin    = person \"Администратор СУБД\" \"Администратор базы данных\"",
           "sec_admin   = person \"Администратор безопасности\" \"Администратор систем безопасности\"",
           "support     = person \"Специалист L2 поддержки\" \"Специалист поддержки, занимающейся разбором инцидентов\""
        ]
    },
    "Zones": {
        "scope": "c4",
        "prefix": "",
        "body":[
           "# Шаблон для зон размещения сервисов",
           "workspace {",
           "    name \"имя продукта\"",
           "    description \"описание продукта\"",
           "",
           "    # включаем режим с иерархической системой идентификаторов",
           "    !identifiers hierarchical",
           "",
           "    model {",
           "        properties { ",
           "            structurizr.groupSeparator \"/\"",
           "            workspace_cmdb \"cmdb_mnemonic\"",
           "            architect \"имя архитектора\"",
           "        }",
           "",
           "        my_system = softwareSystem \"system name\"{",
           "            scheme = container \"Scheme name\"{",
           "                technology \"PostgreSQL 14\"",
           "                tags \"postgre\"",
           "            }",
           "            srv = container \"Service\" {",
           "                technology \"Spring\"",
           "                tags \"java\"",
           "                -> scheme \"Запрос/изменение данных\" \"SQL TCP:5432\"",
           "            }",
           "",
           "            fe = container \"Frontend\" {",
           "                technology \"React\"",
           "                tags \"js\"",
           "                -> srv \"Описание запроса\" \"REST HTTPS:443\" {",
           "                    tags \"external\"",
           "                }",
           "            }",
           "        }",
           "",
           "        SIEM = softwareSystem \"SIEM Agent\"{",
           "            properties {",
           "                \"cmdb\" \"09Q\"",
           "            }",
           "        }",
           "        IDP = softwareSystem \"IDP\"{",
           "            properties {",
           "                \"cmdb\" \"IDP\"",
           "            }",
           "        }",
           "",
           "        deploymentEnvironment \"PROD\" {",
           "                protected = deploymentNode \"PROTECTED STD OPS\" {",
           "                        siem =  deploymentNode \"SIEM\" {",
           "                            softwareSystemInstance SIEM",
           "                        }",
           "",
           "                        idp =  deploymentNode \"IDP\" {",
           "                            softwareSystemInstance IDP",
           "                        }",
           "",
           "                    k8s = deploymentNode \"kubernates.namespace.protected\" {",
           "                        srv_node = deploymentNode \"pod_name_4\" {",
           "                            srv = containerInstance my_system.srv",
           "                            -> idp \"аутентификация пользователя\" \"LDAP TCP:389, UDP:389\"",
           "                            instances 6",
           "                        }",
           "                        deploymentNode \"pod_name_7\" {",
           "                            containerInstance my_system.scheme ",
           "                        }",
           "                        -> siem \"события информационной безопасности\" \"SYSLOG TCP:514, SNMP UDP:161/162\"",
           "                    }",
           "                }",
           "",
           "                dmz = deploymentNode \"DMZ STD OPS\" {",
           "                    siem =  deploymentNode \"SIEM\" {",
           "                        softwareSystemInstance SIEM",
           "                    }",
           "                    k8s = deploymentNode \"kubernates.namespace.dmz\" {",
           "                            fe_pod = deploymentNode \"fe_pod\" {",
           "                                fe = containerInstance my_system.fe {",
           "",
           "                                }",
           "                                instances 2",
           "                            }",
           "                    }",
           "                    jump_server = infrastructureNode \"Jump Server\" {",
           "                         -> k8s.fe_pod.fe \"Доступ к управлению\" \"SSH TCP:22\"",
           "                    }",
           "                }",
           "                dmz.jump_server -> protected.k8s \"Доступ к управлению\" \"SSH TCP:22\"",
           "                dmz.k8s.fe_pod -> dmz.siem \"события информационной безопасности\" \"SYSLOG TCP:514, SNMP UDP:161/162\"",
           "",
           "                waf_server = deploymentNode \"WAF\" {",
           "                    waf = infrastructureNode \"WAF\"",
           "                }",
           "                dmz.k8s.fe_pod -> waf_server.waf \"Запрос данных\" \"REST HTTP:443\"",
           "                waf_server.waf -> protected.k8s.srv_node.srv \"Запрос данных\" \"REST HTTP:443\"",
           "        }",
           "    }",
           "",
           "    views {",
           "        # Конфигурируем настройки отображения plant uml",
           "        properties {",
           "            plantuml.url        \"https://structurizr.vimpelcom.ru/plantuml\"",
           "            kroki.url           \"https://kroki.vimpelcom.ru\"",
           "            plantuml.format     \"svg\"",
           "            kroki.format        \"svg\"",
           "            structurizr.sort created",
           "            structurizr.tooltips true",
           "        }",
           "",
           "        # Задаем стили для отображения",
           "        themes https://structurizr.vimpelcom.ru/themes/beeline.json",
           "",
           "        deployment * \"PROD\" {",
           "            include *",
           "            exclude \"relationship.tag==external\"",
           "            autoLayout",
           "        }",
           "",
           "    }",
           "}"
        ]
    }           
}
  